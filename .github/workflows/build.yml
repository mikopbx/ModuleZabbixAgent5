name: Build and Publish

on:
  push:
    branches:
      - master
      - develop
  workflow_dispatch:

jobs:
  build:
    uses: mikopbx/.github-workflows/.github/workflows/extension-publish.yml@master
    with:
      initial_version: "1.18"
      custom_build_steps: |
        cd $GITHUB_WORKSPACE/module
        rm -f bin/zabbix_agentd bin/zabbix_agentd_arm
        
        # Set up Docker buildx and QEMU
        docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
        docker buildx create --use
        
        # Set up Docker cache
        DOCKER_IMAGE_TAG="zabbix-agent-builder"
        CACHE_PREFIX="$RUNNER_TEMP/docker-cache"
        ZABBIX_VERSION="6.0.0"
        
        # Function to handle Docker cache and build
        build_and_extract() {
          local arch=$1
          local cache_file="${CACHE_PREFIX}-${DOCKER_IMAGE_TAG}-${arch}.tar"
          local tagged_image="${DOCKER_IMAGE_TAG}-${arch}"
          local dockerfile=".github/build/zabbix-agent-builder/Dockerfile.${arch}"
          local container_name="zabbix_agent_${arch}"
          local output_binary="zabbix_agentd$([ "$arch" = "arm64" ] && echo '_arm' || echo '')"
        
          # Try to restore from cache
          if [ "$CACHE_HIT" = "true" ] && [ -f "$cache_file" ]; then
            echo "Loading cached image for ${arch}: ${tagged_image}"
            docker load < "$cache_file"
          else
            echo "Building image for ${arch}: ${tagged_image}"
            docker buildx build \
              --platform "linux/${arch}" \
              --tag "$tagged_image" \
              --load \
              --progress=plain \
              -f "$dockerfile" .
        
            # Save to cache
            echo "Caching image for ${arch}: ${tagged_image}"
            docker save "$tagged_image" > "$cache_file"
          fi
        
          # Extract binary
          docker create --platform "linux/${arch}" --name "$container_name" "$tagged_image"
          docker cp "${container_name}:/build/zabbix-${ZABBIX_VERSION}/src/zabbix_agent/zabbix_agentd" "bin/${output_binary}"
          docker rm "$container_name"
        }
        
        # Build for both architectures
        for arch in arm64 amd64; do
          build_and_extract "$arch"
        done

    secrets: inherit